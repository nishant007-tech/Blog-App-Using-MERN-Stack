{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nishant/Node JS Tut/auth-using-nodejs-reactjs/client/src/components/allposts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Default from '../static/images/defaultimage.jpeg';\nimport axios from 'axios';\nimport Info from './subcomponents/info';\n\nfunction AllPosts() {\n  _s();\n\n  const [allPost, setAllPosts] = useState({\n    allPosts: []\n  });\n  const [currentUser, setCurrentuser] = useState();\n  useEffect(() => {\n    async function fetchposts() {\n      try {\n        let token = JSON.parse(localStorage.getItem('token'));\n        const response = await axios.get('/api/user/getallpost', {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        const res = await axios.get('/api/user/profile', {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        setCurrentuser(res.data.user._id);\n        setAllPosts({\n          allPosts: response.data.posts\n        });\n      } catch (err) {\n        console.log(err.data);\n      }\n    }\n\n    fetchposts();\n  }, []);\n\n  const likeHandler = async postId => {\n    try {\n      let token = JSON.parse(localStorage.getItem('token'));\n      let response = await axios.put('/api/user/likes', {\n        id: postId\n      }, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      }); //this is for re-render, we actually dont need that\n\n      const newData = allPost.allPosts.map(data => {\n        if (data._id === response.data._id) {\n          return response.data;\n        } else {\n          return data;\n        }\n      });\n      setAllPosts({\n        allPosts: newData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const dislikeHandler = async postId => {\n    try {\n      let token = JSON.parse(localStorage.getItem('token'));\n      let response = await axios.put('/api/user/dislikes', {\n        id: postId\n      }, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n      const newData = allPost.allPosts.map(data => {\n        if (data._id === response.data._id) {\n          return response.data;\n        } else {\n          return data;\n        }\n      });\n      setAllPosts({\n        allPosts: newData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const commentInputHandler = async (e, postId) => {\n    try {\n      e.preventDefault();\n      let text = e.target[0].value;\n      let token = JSON.parse(localStorage.getItem('token'));\n      let response = await axios.put('/api/user/comments', {\n        text: text,\n        id: postId\n      }, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n      e.target[0].value = \"\";\n      const newData = allPost.allPosts.map(data => {\n        if (data._id === response.data._id) {\n          return response.data;\n        } else {\n          return data;\n        }\n      });\n      setAllPosts({\n        allPosts: newData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleteCommentHandler = async (commentId, postId) => {\n    try {\n      let token = JSON.parse(localStorage.getItem('token'));\n      let response = await axios.put('/api/user/deletecomment', {\n        commentId: commentId,\n        postId: postId\n      }, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n      const newData = allPost.allPosts.map(data => {\n        if (data._id === response.data._id) {\n          return response.data;\n        } else {\n          return data;\n        }\n      });\n      setAllPosts({\n        allPosts: newData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (allPost.allPosts.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myPost-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"ALL \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge\",\n            children: \"Blog Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), allPost.allPosts.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HeaderContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              value: data.userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            id: \"Date\",\n            children: [\" \", data.date, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.postimage ? data.postimage.replace(\"public/\", \"\") : Default,\n            alt: \"PostImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", data.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [data.likes.includes(currentUser) ? /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: () => dislikeHandler(data._id),\n                id: \"heart\",\n                className: \"fa fa-heart redheart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: () => likeHandler(data._id),\n                id: \"heart\",\n                className: \"fa fa-heart-o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                id: \"showlikes\",\n                children: data.likes.length > 1 ? `${data.likes.length} Likes` : `${data.likes.length} Like`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), data.comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"commentP\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              id: \"commentB\",\n              children: comment.postedByName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"commentText\",\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 45\n            }, this), comment.postedBy === currentUser ? /*#__PURE__*/_jsxDEV(\"i\", {\n              id: \"trashForComment\",\n              onClick: () => deleteCommentHandler(comment._id, data._id),\n              className: \"fa fa-trash-o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 49\n            }, this) : '']\n          }, comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 41\n          }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              commentInputHandler(e, data._id);\n            },\n            className: \"comments\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"commentInput\",\n              type: \"commentText\",\n              placeholder: \"add a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myPost-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"ALL \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge\",\n            children: \"Blog Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-cards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-content\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"No Post Yet!! Be The First One To Create Post.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AllPosts, \"dCyyRkWMGQADb2wGcPy9DUhwP3A=\");\n\n_c = AllPosts;\nexport default AllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"sources":["/home/nishant/Node JS Tut/auth-using-nodejs-reactjs/client/src/components/allposts.js"],"names":["React","useEffect","useState","Default","axios","Info","AllPosts","allPost","setAllPosts","allPosts","currentUser","setCurrentuser","fetchposts","token","JSON","parse","localStorage","getItem","response","get","headers","res","data","user","_id","posts","err","console","log","likeHandler","postId","put","id","newData","map","error","dislikeHandler","commentInputHandler","e","preventDefault","text","target","value","deleteCommentHandler","commentId","length","index","userId","date","postimage","replace","title","description","likes","includes","comments","comment","postedByName","postedBy"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC;AACpCO,IAAAA,QAAQ,EAAE;AAD0B,GAAD,CAAvC;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeW,UAAf,GAA4B;AACxB,UAAI;AACA,YAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,cAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,sBAAV,EACnB;AAAEC,UAAAA,OAAO,EAAE;AAAE,4BAAgBP;AAAlB;AAAX,SADmB,CAAvB;AAGA,cAAMQ,GAAG,GAAG,MAAMjB,KAAK,CAACe,GAAN,CAAU,mBAAV,EACd;AAAEC,UAAAA,OAAO,EAAE;AAAE,4BAAgBP;AAAlB;AAAX,SADc,CAAlB;AAGAF,QAAAA,cAAc,CAACU,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcC,GAAf,CAAd;AACAhB,QAAAA,WAAW,CAAC;AACRC,UAAAA,QAAQ,EAAES,QAAQ,CAACI,IAAT,CAAcG;AADhB,SAAD,CAAX;AAIH,OAbD,CAaE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,IAAhB;AACH;AACJ;;AACDV,IAAAA,UAAU;AAEb,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,QAAMiB,WAAW,GAAG,MAAOC,MAAP,IAAkB;AAClC,QAAI;AACA,UAAIjB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,UAAIC,QAAQ,GAAG,MAAMd,KAAK,CAAC2B,GAAN,CAAU,iBAAV,EAA6B;AAAEC,QAAAA,EAAE,EAAEF;AAAN,OAA7B,EACjB;AAAEV,QAAAA,OAAO,EAAE;AAAE,0BAAgBP;AAAlB;AAAX,OADiB,CAArB,CAFA,CAKA;;AACA,YAAMoB,OAAO,GAAG1B,OAAO,CAACE,QAAR,CAAiByB,GAAjB,CAAsBZ,IAAD,IAAU;AAC3C,YAAIA,IAAI,CAACE,GAAL,KAAaN,QAAQ,CAACI,IAAT,CAAcE,GAA/B,EAAoC;AAChC,iBAAON,QAAQ,CAACI,IAAhB;AACH,SAFD,MAEO;AACH,iBAAOA,IAAP;AACH;AACJ,OANe,CAAhB;AAOAd,MAAAA,WAAW,CAAC;AACRC,QAAAA,QAAQ,EAAEwB;AADF,OAAD,CAAX;AAGH,KAhBD,CAgBE,OAAOE,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AACJ,GApBD;;AAsBA,QAAMC,cAAc,GAAG,MAAON,MAAP,IAAkB;AACrC,QAAI;AACA,UAAIjB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,UAAIC,QAAQ,GAAG,MAAMd,KAAK,CAAC2B,GAAN,CAAU,oBAAV,EAAgC;AAAEC,QAAAA,EAAE,EAAEF;AAAN,OAAhC,EACjB;AAAEV,QAAAA,OAAO,EAAE;AAAE,0BAAgBP;AAAlB;AAAX,OADiB,CAArB;AAGA,YAAMoB,OAAO,GAAG1B,OAAO,CAACE,QAAR,CAAiByB,GAAjB,CAAsBZ,IAAD,IAAU;AAC3C,YAAIA,IAAI,CAACE,GAAL,KAAaN,QAAQ,CAACI,IAAT,CAAcE,GAA/B,EAAoC;AAChC,iBAAON,QAAQ,CAACI,IAAhB;AACH,SAFD,MAEO;AACH,iBAAOA,IAAP;AACH;AACJ,OANe,CAAhB;AAOAd,MAAAA,WAAW,CAAC;AACRC,QAAAA,QAAQ,EAAEwB;AADF,OAAD,CAAX;AAGH,KAfD,CAeE,OAAOE,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AAEJ,GApBD;;AAsBA,QAAME,mBAAmB,GAAG,OAAOC,CAAP,EAAUR,MAAV,KAAqB;AAC7C,QAAI;AACAQ,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYC,KAAvB;AACA,UAAI7B,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,UAAIC,QAAQ,GAAG,MAAMd,KAAK,CAAC2B,GAAN,CAAU,oBAAV,EAAgC;AACjDS,QAAAA,IAAI,EAAEA,IAD2C;AAEjDR,QAAAA,EAAE,EAAEF;AAF6C,OAAhC,EAGlB;AACCV,QAAAA,OAAO,EAAE;AAAE,0BAAgBP;AAAlB;AADV,OAHkB,CAArB;AAMAyB,MAAAA,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYC,KAAZ,GAAoB,EAApB;AACA,YAAMT,OAAO,GAAG1B,OAAO,CAACE,QAAR,CAAiByB,GAAjB,CAAsBZ,IAAD,IAAU;AAC3C,YAAIA,IAAI,CAACE,GAAL,KAAaN,QAAQ,CAACI,IAAT,CAAcE,GAA/B,EAAoC;AAChC,iBAAON,QAAQ,CAACI,IAAhB;AACH,SAFD,MAEO;AACH,iBAAOA,IAAP;AACH;AACJ,OANe,CAAhB;AAOAd,MAAAA,WAAW,CAAC;AACRC,QAAAA,QAAQ,EAAEwB;AADF,OAAD,CAAX;AAGH,KArBD,CAqBE,OAAOP,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAzBD;;AA0BA,QAAMiB,oBAAoB,GAAG,OAAOC,SAAP,EAAkBd,MAAlB,KAA6B;AACtD,QAAI;AACA,UAAIjB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,UAAIC,QAAQ,GAAG,MAAMd,KAAK,CAAC2B,GAAN,CAAU,yBAAV,EAAqC;AAAEa,QAAAA,SAAS,EAAEA,SAAb;AAAwBd,QAAAA,MAAM,EAAEA;AAAhC,OAArC,EACjB;AAAEV,QAAAA,OAAO,EAAE;AAAE,0BAAgBP;AAAlB;AAAX,OADiB,CAArB;AAGA,YAAMoB,OAAO,GAAG1B,OAAO,CAACE,QAAR,CAAiByB,GAAjB,CAAsBZ,IAAD,IAAU;AAC3C,YAAIA,IAAI,CAACE,GAAL,KAAaN,QAAQ,CAACI,IAAT,CAAcE,GAA/B,EAAoC;AAChC,iBAAON,QAAQ,CAACI,IAAhB;AACH,SAFD,MAEO;AACH,iBAAOA,IAAP;AACH;AACJ,OANe,CAAhB;AAOAd,MAAAA,WAAW,CAAC;AACRC,QAAAA,QAAQ,EAAEwB;AADF,OAAD,CAAX;AAGH,KAfD,CAeE,OAAOE,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AAEJ,GApBD;;AAuBA,MAAI5B,OAAO,CAACE,QAAR,CAAiBoC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA,0CAAQ;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAMQtC,OAAO,CAACE,QAAR,CAAiByB,GAAjB,CAAqB,CAACZ,IAAD,EAAOwB,KAAP,kBACjB;AAAiB,QAAA,SAAS,EAAC,YAA3B;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,KAAK,EAAExB,IAAI,CAACyB;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAQ,YAAA,EAAE,EAAC,MAAX;AAAA,4BAAoBzB,IAAI,CAAC0B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AACI,YAAA,GAAG,EAAE1B,IAAI,CAAC2B,SAAL,GAAiB3B,IAAI,CAAC2B,SAAL,CAAeC,OAAf,CAAuB,SAAvB,EAAkC,EAAlC,CAAjB,GAAyD/C,OADlE;AAEI,YAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAeI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCAEI;AAAA,4BAAKmB,IAAI,CAAC6B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AAAA,sBAAI7B,IAAI,CAAC8B;AAAT;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAMI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCAEI;AAAA,yBACK9B,IAAI,CAAC+B,KAAL,CAAWC,QAAX,CAAoB5C,WAApB,iBAEG;AAAG,gBAAA,OAAO,EAAE,MAAM0B,cAAc,CAACd,IAAI,CAACE,GAAN,CAAhC;AAA4C,gBAAA,EAAE,EAAC,OAA/C;AAAuD,gBAAA,SAAS,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,sBAFH,gBAIG;AAAG,gBAAA,OAAO,EAAE,MAAMK,WAAW,CAACP,IAAI,CAACE,GAAN,CAA7B;AAAyC,gBAAA,EAAE,EAAC,OAA5C;AAAoD,gBAAA,SAAS,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,sBALR,eAQI;AAAG,gBAAA,EAAE,EAAC,WAAN;AAAA,0BACKF,IAAI,CAAC+B,KAAL,CAAWR,MAAX,GAAoB,CAApB,GAEI,GAAEvB,IAAI,CAAC+B,KAAL,CAAWR,MAAO,QAFxB,GAII,GAAEvB,IAAI,CAAC+B,KAAL,CAAWR,MAAO;AAL7B;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBANJ,EA6BQvB,IAAI,CAACiC,QAAL,CAAcrB,GAAd,CAAmBsB,OAAD,iBACd;AAAqB,YAAA,EAAE,EAAC,UAAxB;AAAA,oCACI;AAAG,cAAA,EAAE,EAAC,UAAN;AAAA,wBAAkBA,OAAO,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,EAAE,EAAC,aAAT;AAAA,wBAAwBD,OAAO,CAAChB;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGKgB,OAAO,CAACE,QAAR,KAAqBhD,WAArB,gBAEG;AAAG,cAAA,EAAE,EAAC,iBAAN;AAAwB,cAAA,OAAO,EAAE,MAAMiC,oBAAoB,CAACa,OAAO,CAAChC,GAAT,EAAcF,IAAI,CAACE,GAAnB,CAA3D;AAAoF,cAAA,SAAS,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,oBAFH,GAIG,EAPR;AAAA,aAAQgC,OAAO,CAAChC,GAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,CA7BR,eA2CI;AAAM,YAAA,QAAQ,EAAGc,CAAD,IAAO;AACnBD,cAAAA,mBAAmB,CAACC,CAAD,EAAIhB,IAAI,CAACE,GAAT,CAAnB;AACH,aAFD;AAEG,YAAA,SAAS,EAAC,UAFb;AAAA,mCAGI;AAAO,cAAA,EAAE,EAAC,cAAV;AAAyB,cAAA,IAAI,EAAC,aAA9B;AAA4C,cAAA,WAAW,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA,SAAUsB,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ,CANR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiFH,GAlFD,MAkFO;AACH,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA,0CAAQ;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;AAEJ;;GA7NQxC,Q;;KAAAA,Q;AA8NT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Default from '../static/images/defaultimage.jpeg';\nimport axios from 'axios';\nimport Info from './subcomponents/info';\n\n\nfunction AllPosts() {\n\n    const [allPost, setAllPosts] = useState({\n        allPosts: []\n    })\n    const [currentUser, setCurrentuser] = useState();\n\n    useEffect(() => {\n        async function fetchposts() {\n            try {\n                let token = JSON.parse(localStorage.getItem('token'));\n                const response = await axios.get('/api/user/getallpost',\n                    { headers: { \"x-auth-token\": token } }\n                );\n                const res = await axios.get('/api/user/profile',\n                    { headers: { \"x-auth-token\": token } }\n                );\n                setCurrentuser(res.data.user._id);\n                setAllPosts({\n                    allPosts: response.data.posts\n                });\n\n            } catch (err) {\n                console.log(err.data);\n            }\n        }\n        fetchposts();\n\n    }, [])\n\n    const likeHandler = async (postId) => {\n        try {\n            let token = JSON.parse(localStorage.getItem('token'));\n            let response = await axios.put('/api/user/likes', { id: postId },\n                { headers: { \"x-auth-token\": token } }\n            );\n            //this is for re-render, we actually dont need that\n            const newData = allPost.allPosts.map((data) => {\n                if (data._id === response.data._id) {\n                    return response.data\n                } else {\n                    return data\n                }\n            })\n            setAllPosts({\n                allPosts: newData\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const dislikeHandler = async (postId) => {\n        try {\n            let token = JSON.parse(localStorage.getItem('token'));\n            let response = await axios.put('/api/user/dislikes', { id: postId },\n                { headers: { \"x-auth-token\": token } }\n            );\n            const newData = allPost.allPosts.map((data) => {\n                if (data._id === response.data._id) {\n                    return response.data\n                } else {\n                    return data\n                }\n            })\n            setAllPosts({\n                allPosts: newData\n            });\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const commentInputHandler = async (e, postId) => {\n        try {\n            e.preventDefault();\n            let text = e.target[0].value;\n            let token = JSON.parse(localStorage.getItem('token'));\n            let response = await axios.put('/api/user/comments', {\n                text: text,\n                id: postId\n            }, {\n                headers: { \"x-auth-token\": token }\n            });\n            e.target[0].value = \"\";\n            const newData = allPost.allPosts.map((data) => {\n                if (data._id === response.data._id) {\n                    return response.data\n                } else {\n                    return data\n                }\n            })\n            setAllPosts({\n                allPosts: newData\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    const deleteCommentHandler = async (commentId, postId) => {\n        try {\n            let token = JSON.parse(localStorage.getItem('token'));\n            let response = await axios.put('/api/user/deletecomment', { commentId: commentId, postId: postId },\n                { headers: { \"x-auth-token\": token } }\n            );\n            const newData = allPost.allPosts.map((data) => {\n                if (data._id === response.data._id) {\n                    return response.data\n                } else {\n                    return data\n                }\n            })\n            setAllPosts({\n                allPosts: newData\n            });\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n\n    if (allPost.allPosts.length > 0) {\n        return (\n            <div className=\"myPost-container\">\n                <div className=\"headPost\">\n                    <h2>ALL <span className=\"badge\">Blog Posts</span></h2>\n                    <hr></hr>\n                </div>\n                {\n                    allPost.allPosts.map((data, index) => (\n                        <div key={index} className=\"blog-cards\">\n                            <div className=\"HeaderContent\">\n                                <div>\n                                    <Info value={data.userId} />\n                                </div>\n                                <strong id=\"Date\"> {data.date} </strong>\n                            </div>\n\n                            <div className=\"image\">\n                                <img\n                                    src={data.postimage ? data.postimage.replace(\"public/\", \"\") : Default}\n                                    alt=\"PostImg\"\n                                />\n                            </div>\n\n                            <div className=\"blog-content\">\n\n                                <b> {data.title}</b>\n\n                                <p>{data.description}</p>\n\n                                <div className=\"icons\">\n\n                                    <div>\n                                        {data.likes.includes(currentUser)\n                                            ?\n                                            <i onClick={() => dislikeHandler(data._id)} id=\"heart\" className=\"fa fa-heart redheart\"></i>\n                                            :\n                                            <i onClick={() => likeHandler(data._id)} id=\"heart\" className=\"fa fa-heart-o\"></i>\n                                        }\n\n                                        <i id=\"showlikes\">\n                                            {data.likes.length > 1\n                                                ?\n                                                `${data.likes.length} Likes`\n                                                :\n                                                `${data.likes.length} Like`\n                                            }\n                                        </i>\n\n                                    </div>\n\n                                </div>\n                                {\n                                    data.comments.map((comment) => (\n                                        <p key={comment._id} id=\"commentP\">\n                                            <b id=\"commentB\">{comment.postedByName}</b>\n                                            <span id=\"commentText\">{comment.text}</span>\n                                            {comment.postedBy === currentUser\n                                                ?\n                                                <i id=\"trashForComment\" onClick={() => deleteCommentHandler(comment._id, data._id)} className=\"fa fa-trash-o\"></i>\n                                                :\n                                                ''\n                                            }\n                                        </p>\n                                    ))\n\n                                }\n                                <form onSubmit={(e) => {\n                                    commentInputHandler(e, data._id)\n                                }} className=\"comments\">\n                                    <input id=\"commentInput\" type=\"commentText\" placeholder=\"add a comment\"></input>\n                                </form>\n\n                            </div>\n                        </div>\n                    ))\n\n                }\n\n\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"myPost-container\">\n                <div className=\"headPost\">\n                    <h2>ALL <span className=\"badge\">Blog Posts</span></h2>\n                    <hr></hr>\n                </div>\n                <div className=\"blog-cards\">\n                    <div className=\"blog-content\">\n                        <b>No Post Yet!! Be The First One To Create Post.</b>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default AllPosts;"]},"metadata":{},"sourceType":"module"}